Vagrant.configure("2") do |config|
  config.vm.box = "generic/oracle8"
  config.ssh.insert_key = true
  #config.ssh.private_key_path = "~/.ssh/id_ed25519"

  # Общий путь к твоему публичному ключу
  PUB_KEY_PATH = "~/.ssh/id_ed25519.pub"

  # Helper для конфигурации VM
  def setup_node(node, ip, memory, cpus)
    node.vm.network "private_network", ip: ip
    node.vm.provider :libvirt do |lv|
      lv.memory = memory
      lv.cpus = cpus
      lv.storage :file, size: '10G', path: "#{node.vm.hostname}.img"  # относительный путь
    end

    # Provision: копируем ключ и ставим Python+nano
    node.vm.provision "file", source: PUB_KEY_PATH, destination: "/home/vagrant/id_ed25519.pub"
    node.vm.provision "shell", inline: <<-SHELL
      # Создать .ssh и добавить ключ
      mkdir -p /home/vagrant/.ssh
      cat /home/vagrant/id_ed25519.pub >> /home/vagrant/.ssh/authorized_keys
      chown -R vagrant:vagrant /home/vagrant/.ssh
      chmod 700 /home/vagrant/.ssh
      chmod 600 /home/vagrant/.ssh/authorized_keys

      # Установка nano
      sudo dnf install -y nano

      # Установка Python 3 если отсутствует
      if ! command -v python3 &> /dev/null; then
          sudo dnf install -y python3
      fi

      # Симлинк для Ansible
      if [ ! -f /usr/bin/python ] && [ -f /usr/bin/python3 ]; then
          sudo ln -s /usr/bin/python3 /usr/bin/python
      fi
    SHELL
  end

  # VM1: Consul
  config.vm.define "consul" do |consul|
    consul.vm.hostname = "consul"
    setup_node(consul, "192.168.121.10", 512, 1)
  end

  # VM2: PostgreSQL #1
  config.vm.define "db1" do |db1|
    db1.vm.hostname = "db1"
    setup_node(db1, "192.168.121.11", 1024, 1)
  end

  # VM3: PostgreSQL #2
  config.vm.define "db2" do |db2|
    db2.vm.hostname = "db2"
    setup_node(db2, "192.168.121.12", 1024, 1)
  end
end
