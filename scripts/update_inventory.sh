#!/usr/bin/env bash
set -euo pipefail

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
ROOT_DIR="${PG_HA_PATRONI_HOME:-$(pwd)}"
export VAGRANT_CWD="$ROOT_DIR"

INVENTORY_FILE="${1:-}"
[ -z "$INVENTORY_FILE" ] && { echo "‚ùå –ù–µ —É–∫–∞–∑–∞–Ω –ø—É—Ç—å –¥–æ inventory.ini"; exit 1; }

TOPOLOGY_FILE="$ROOT_DIR/topology/nodes.yml"
mkdir -p "$(dirname "$INVENTORY_FILE")"

TMP_FILE=$(mktemp)
TMP_DIR=$(mktemp -d)
trap "rm -f $TMP_FILE; rm -rf $TMP_DIR" EXIT

echo "üîπ ROOT_DIR=$ROOT_DIR"
echo "üîπ TOPOLOGY_FILE=$TOPOLOGY_FILE"
echo "üîπ INVENTORY_FILE=$INVENTORY_FILE"

# --- –ü–∞—Ä—Å–∏–º nodes.yml –≤—Ä—É—á–Ω—É—é ---
declare -A NODE_GROUP
declare -A NODE_IP
current_node=""
while read -r line; do
    line=$(echo "$line" | sed 's/^[[:space:]]*//')
    case "$line" in
        -\ name:*)
            current_node=$(echo "$line" | cut -d' ' -f3)
            ;;
        group:*)
            NODE_GROUP["$current_node"]=$(echo "$line" | cut -d' ' -f2)
            ;;
        ip:*)
            ip_val=$(echo "$line" | cut -d' ' -f2)
            [[ "$ip_val" != "null" ]] && NODE_IP["$current_node"]="$ip_val"
            ;;
    esac
done < "$TOPOLOGY_FILE"

echo "üîπ Nodes from topology:"
for n in "${!NODE_GROUP[@]}"; do
    echo "  $n -> group=${NODE_GROUP[$n]}, ip=${NODE_IP[$n]:-unset}"
done

# --- –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–µ–∞–ª—å–Ω–æ –ø–æ–¥–Ω—è—Ç—ã—Ö VM ---
active_nodes=$(vagrant global-status --prune | awk -v cwd="$ROOT_DIR" '$5==cwd && $4=="running" {print $2}')

if [[ -z "$active_nodes" ]]; then
    echo "‚ö†Ô∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è inventory"
else
    echo "üîπ Active nodes detected:"
    for n in $active_nodes; do
        echo "  $n"
    done

    # --- –ñ–¥—ë–º IP –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –≥—Ä—É–ø–ø ---
    for node in $active_nodes; do
        group_name="${NODE_GROUP[$node]}"
        if [[ -z "$group_name" ]]; then
            echo "‚ö†Ô∏è –ù–æ–¥–∞ $node –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ topology.yml, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
            continue
        fi

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π IP, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        if [[ -n "${NODE_IP[$node]:-}" ]]; then
            ip="${NODE_IP[$node]}"
            echo "üîπ Using static IP for $node -> $ip"
        else
            echo "üîπ Waiting for dynamic IP for $node..."
            ip=""
            for i in {1..60}; do
                ip=$(vagrant ssh-config "$node" 2>/dev/null | awk '/HostName/ {print $2}' || true)
                if [[ -n "$ip" ]]; then
                    echo "üîπ Got dynamic IP for $node -> $ip"
                    break
                fi
                printf "."
                sleep 1
            done
            echo
            if [[ -z "$ip" ]]; then
                echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å IP –¥–ª—è –Ω–æ–¥—ã $node"
                continue
            fi
        fi

        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≥—Ä—É–ø–ø—ã
        mkdir -p "$TMP_DIR"
        echo "$node ansible_host=$ip" >> "$TMP_DIR/$group_name"
    done

    # --- –§–æ—Ä–º–∏—Ä—É–µ–º inventory.ini ---
    shopt -s nullglob
    for group_file in "$TMP_DIR"/*; do
        group_name=$(basename "$group_file")
        echo "[$group_name]" >> "$TMP_FILE"
        cat "$group_file" >> "$TMP_FILE"
        echo "" >> "$TMP_FILE"
    done
    shopt -u nullglob
fi

# --- –û–±–Ω–æ–≤–ª—è–µ–º inventory.ini —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å ---
if [[ -f "$TMP_FILE" ]] && [[ -s "$TMP_FILE" ]] && ! diff -q "$TMP_FILE" "$INVENTORY_FILE" >/dev/null 2>&1; then
    echo "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º inventory.ini"
    cp "$TMP_FILE" "$INVENTORY_FILE"
else
    echo "‚úÖ Inventory –∞–∫—Ç—É–∞–ª–µ–Ω"
fi

echo "‚úÖ –ì–æ—Ç–æ–≤–æ: $INVENTORY_FILE"
